/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.52
 * Generated at: 2018-07-13 10:16:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.notice;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.kh.java.notice.model.vo.NoticeVo;
import java.util.ArrayList;
import com.kh.java.member.model.vo.MemberVo;

public final class noticeList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/views/notice/../common/header.jsp", Long.valueOf(1530001303000L));
    _jspx_dependants.put("/views/notice/../common/footer.jsp", Long.valueOf(1527851360000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.kh.java.notice.model.vo.NoticeVo");
    _jspx_imports_classes.add("com.kh.java.member.model.vo.MemberVo");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      out.write('\n');
 ArrayList<NoticeVo> list 
				= (ArrayList<NoticeVo>)request.getAttribute("list"); 
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>공지 사항 목록</title>\n");
      out.write("<style>\n");
      out.write("\t.outer{\n");
      out.write("\t\twidth:800px;\n");
      out.write("\t\theight:500px;\n");
      out.write("\t\tbackground:black;\n");
      out.write("\t\tcolor:white;\n");
      out.write("\t\tmargin-left:auto;\n");
      out.write("\t\tmargin-right:auto;\n");
      out.write("\t\tpadding:20px;\n");
      out.write("\t\tborder:1px solid white;\n");
      out.write("\t}\n");
      out.write("\t.tableArea{\n");
      out.write("\t\twidth:600px;\n");
      out.write("\t\theight:400px;\n");
      out.write("\t\tmargin-left:auto;\n");
      out.write("\t\tmargin-right:auto;\n");
      out.write("\t}\n");
      out.write("\ttable td{\n");
      out.write("\t\ttext-align:center;\n");
      out.write("\t}\n");
      out.write("\t.searchArea{\n");
      out.write("\t\twidth:600px;\n");
      out.write("\t\tmargin-left:auto;\n");
      out.write("\t\tmargin-right:auto;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\ta{\n");
      out.write("\t\tcolor:white;\n");
      out.write("\t}\n");
      out.write("</style>\n");
      out.write("<script>\n");
      out.write("\tfunction searchNotice(){\n");
      out.write("\t\tvar condition = $(\"#searchCondition\").val();\n");
      out.write("\t\tvar searchText = $(\"#searchText\").val();\n");
      out.write("\t\t//쿼리 스트링(파라미터 값 작성 방법)\n");
      out.write("\t\t//url?key1=value1&key2=value2;\n");
      out.write("\t\tlocation.href = \"/mwp/searchNotice.do?condition=\" + condition\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ \"&keyword=\" + searchText;\n");
      out.write("\t\t\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\tfunction writeNotice(){\n");
      out.write("\t\t\n");
      out.write("\t\tlocation.href = \"/mwp/views/notice/noticeForm.jsp\";\n");
      out.write("\t\t\n");
      out.write("\t}\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");

	MemberVo member = (MemberVo)session.getAttribute("user");

      out.write("\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<script type=\"text/javascript\" src=\"/mwp/js/jquery-3.3.1.min.js\"></script>\n");
      out.write("<script src=\"//developers.kakao.com/sdk/js/kakao.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"https://static.nid.naver.com/js/naveridlogin_js_sdk_2.0.0.js\" charset=\"utf-8\"></script>\n");
      out.write("<style>\n");
      out.write("\tbody{\n");
      out.write("\t\tbackground:url(\"/mwp/images/background.jpg\") no-repeat;\n");
      out.write("\t\tbackground-size:cover;\n");
      out.write("\t}\n");
      out.write("\t.wrap{\n");
      out.write("\t\tbackground:black;\n");
      out.write("\t\twidth:100%;\n");
      out.write("\t\theight:50px;\n");
      out.write("\t}\n");
      out.write("\t.menu{\n");
      out.write("\t\tbackground:black;\n");
      out.write("\t\tcolor:white;\n");
      out.write("\t\twidth:150px;\n");
      out.write("\t\theight:50px;\n");
      out.write("\t\tvertical-align:middle;\n");
      out.write("\t\ttext-align:center;\n");
      out.write("\t\tdisplay:table-cell;\n");
      out.write("\t}\n");
      out.write("\t.nav{\n");
      out.write("\t\twidth:600px;\n");
      out.write("\t\tmargin-left:auto;\n");
      out.write("\t\tmargin-right:auto;\n");
      out.write("\t}\n");
      out.write("\t.menu:hover{\n");
      out.write("\t\tbackground:lightgray;\n");
      out.write("\t\tcolor:orangered;\n");
      out.write("\t\tfont-weight:bold;\n");
      out.write("\t\tcursor:pointer;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t.loginArea > #loginForm, .userInfo{\n");
      out.write("\t\tfloat:right;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t#memberLoginBtn, #memberJoinBtn, #memberInfoBtn, #memberLogoutBtn{\n");
      out.write("\t\tdisplay:inline-block;\n");
      out.write("\t\tvertical-align:middle;\n");
      out.write("\t\ttext-align:center;\n");
      out.write("\t\tcursor:pointer;\n");
      out.write("\t\twidth:150px;\n");
      out.write("\t\theight:30px;\n");
      out.write("\t\tborder-radius:5px;\n");
      out.write("\t\tbackground:orangered;\n");
      out.write("\t\tcolor:white;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t.tile{\n");
      out.write("\t\twidth:150px;\n");
      out.write("\t\theight:150px;\n");
      out.write("\t\tbackground:black;\n");
      out.write("\t\tdisplay:inline-block;\n");
      out.write("\t}\n");
      out.write("\t.first-line{\n");
      out.write("\t\tmargin-top:10%;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t.tile-menu:hover{\n");
      out.write("\t\tbackground:skyblue;\n");
      out.write("\t\tcursor:pointer;\n");
      out.write("\t\tcolor:white;\n");
      out.write("\t}\n");
      out.write("\t.notile{\n");
      out.write("\t\tvisibility:hidden;\n");
      out.write("\t}\n");
      out.write("\t.tile1{\n");
      out.write("\t\tbackground:darkgray;\n");
      out.write("\t}\n");
      out.write("\t.footer{\n");
      out.write("\t\tposition:fixed;\n");
      out.write("\t\tleft:0;\n");
      out.write("\t\tbottom:0;\n");
      out.write("\t\tbackground:brown;\n");
      out.write("\t\tcolor:white;\n");
      out.write("\t\ttext-align:center;\n");
      out.write("\t\twidth:100%;\n");
      out.write("\t}\n");
      out.write("</style>\n");
      out.write("<script>\n");
      out.write("\tfunction login(){\n");
      out.write("\t\t$(\"#loginForm\").submit();\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction logout(){\n");
      out.write("\t\tlocation.href = \"/mwp/logout.do\";\t\t\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction join(){\n");
      out.write("\t\tlocation.href = \"/mwp/views/member/memberJoin.jsp\";\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction mainPage(){\n");
      out.write("\t\t//request.getContextPath() - /mwp\n");
      out.write("\t\t//location.href = \"/mwp/index.jsp\";\n");
      out.write("\t\tlocation.href = \"");
      out.print(request.getContextPath());
      out.write("/index.jsp\";\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction myInfo(){\n");
      out.write("// \t\tconsole.log(localStorage);\n");
      out.write("// \t\tlocalStorage.removeItem(\"kakao_2e2524e541bae9363d7d85d3d3fbde83\");\n");
      out.write("\t\t//Kakao.Auth.getStatus(function(status){\n");
      out.write("\t\t//\tconsole.log(status.user.kaccount_email);\n");
      out.write("\t\t//});\n");
      out.write("//\t\tlocation.href = \"../member/memberUpdate.jsp\";\n");
      out.write("\t\tlocation.href = \"/mwp/views/member/memberUpdate.jsp\";\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction noticePage(){\n");
      out.write("\t\tlocation.href = \"/mwp/noticeList.do\";\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction boardPage(){\n");
      out.write("\t\tlocation.href = \"");
      out.print(request.getContextPath());
      out.write("/boardList.do\";\n");
      out.write("\t}\n");
      out.write("\t//     /mwp -> context path\n");
      out.write("\tfunction galleryPage(){\n");
      out.write("\t\tlocation.href = \"/mwp/galleryList.do\";\t\t\n");
      out.write("\t}\n");
      out.write("\tvar naverLogin;\n");
      out.write("\t$(function(){\n");
      out.write("\t\tKakao.init('3a3c19b17c6dccaf7fbcfb062df5d924');\n");
      out.write("\t    // 카카오 로그인 버튼을 생성합니다.\n");
      out.write("\t    Kakao.Auth.createLoginButton({\n");
      out.write("\t      container: '#kakao-login-btn',\n");
      out.write("\t      success: function(authObj) {\n");
      out.write("\t      \talert(JSON.stringify(authObj));\n");
      out.write("\t      },\n");
      out.write("\t      fail: function(err) {\n");
      out.write("\t         alert(JSON.stringify(err));\n");
      out.write("\t      }\n");
      out.write("\t    });\n");
      out.write("\t    \n");
      out.write("\t    naverLogin = new naver.LoginWithNaverId(\n");
      out.write("    \t\t{\n");
      out.write("    \t\t\tclientId: \"STokf_c_5b9UupTwNlO1\",\n");
      out.write("    \t\t\tcallbackUrl: \"http://localhost:8081/mwp/index.jsp\",\n");
      out.write("    \t\t\tisPopup: true, /* 팝업을 통한 연동처리 여부 */\n");
      out.write("    \t\t\tcallbackHandle: true,\n");
      out.write("    \t\t\tloginButton: {color: \"green\", type: 3, height: 60} /* 로그인 버튼의 타입을 지정 */\n");
      out.write("    \t\t}\n");
      out.write("    \t);\n");
      out.write("    \t\n");
      out.write("    \t/* 설정정보를 초기화하고 연동을 준비 */\n");
      out.write("    \tnaverLogin.init();\n");
      out.write("    \t\n");
      out.write("    \tnaverLogin.getLoginStatus(function (status) {\n");
      out.write("    \t\tif (status) {\n");
      out.write("    \t\t\tclose();\n");
      out.write("    \t\t} else {\n");
      out.write("    \t\t\tconsole.log(\"AccessToken이 올바르지 않습니다.\");\n");
      out.write("    \t\t}\n");
      out.write("    \t});\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\tfunction kakao_logout(){\n");
      out.write("\t\tKakao.Auth.logout();\n");
      out.write("\t\t//페이지 이동\n");
      out.write("\t\t//다른 로직\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t$(function(){\n");
      out.write("\t\t//keyup - enterkey\n");
      out.write("\t\t$(\"#pwdText\").change(function(){\n");
      out.write("\t\t\t$(\"#loginForm\").submit();\n");
      out.write("\t\t});\t\n");
      out.write("\t})\n");
      out.write("\tfunction ajaxPage(){\n");
      out.write("\t\tlocation.href = \"/mwp/views/ajax/ajaxStudy.jsp\"\t;\t\n");
      out.write("\t}\n");
      out.write("\tfunction storagePage(){\n");
      out.write("\t\tlocation.href = \"/mwp/views/api/localStorage.jsp\";\t\n");
      out.write("\t}\n");
      out.write("\tfunction mapPage(){\n");
      out.write("\t\tlocation.href = \"/mwp/views/api/map.jsp\";\n");
      out.write("\t\t\n");
      out.write("\t}\n");
      out.write("\tfunction confirmEmail(){\n");
      out.write("\t\tnaverLogin.getLoginStatus(function (status) {\n");
      out.write("\t\t\tif (status) {\n");
      out.write("\t\t\t\tvar email = naverLogin.user.getEmail();\n");
      out.write("\t\t\t\tconsole.log(email);\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\tconsole.log(\"AccessToken이 올바르지 않습니다.\");\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t}\n");
      out.write("\tfunction naverLogout(){\n");
      out.write("\t\t$.ajax({\n");
      out.write("\t\t\ttype:\"post\",\n");
      out.write("\t\t\tdataType:\"text/html\",\n");
      out.write("\t\t\turl:\"http://nid.naver.com/nidlogin.logout\",\n");
      out.write("\t\t\tcrossdomain:true,\n");
      out.write("\t\t\txhrFields:{\n");
      out.write("\t\t\t\twithCredentials:true\n");
      out.write("\t\t\t},success:function(data){\n");
      out.write("\t\t\t\talert(\"로그아웃 성공\");\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t}\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<h1 align=\"center\">My Web Project</h1>\n");
      out.write("\t<div class=\"loginArea\">\n");
      out.write("\t");
if(member == null){ 
      out.write("\n");
      out.write("\t\t<form id=\"loginForm\" action=\"/mwp/login.au\" method=\"post\">\n");
      out.write("\t\t\t<table>\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<td>아이디 : </td>\n");
      out.write("\t\t\t\t\t<td>\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" name=\"userId\"/>\n");
      out.write("\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<td>비밀번호 : </td>\n");
      out.write("\t\t\t\t\t<td>\n");
      out.write("\t\t\t\t\t\t<input type=\"password\" name=\"userPwd\" id=\"pwdText\"/>\n");
      out.write("\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<td colspan=\"2\">\n");
      out.write("\t\t\t\t\t\t<div id=\"memberLoginBtn\" onclick=\"login();\">로그인</div>\n");
      out.write("\t\t\t\t\t\t<div id=\"memberJoinBtn\" onclick=\"join();\">회원가입</div>\n");
      out.write("\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t\t</table>\t\t\n");
      out.write("\t\t</form>\n");
      out.write("\t\t");
}else{
      out.write("\n");
      out.write("\t\t\t<div class=\"userInfo\">\n");
      out.write("\t\t\t\t<p>");
      out.print(member.getUserName());
      out.write("님 방문을 환영 합니다.</p>\n");
      out.write("\t\t\t\t<div id=\"memberInfoBtn\" onclick=\"myInfo();\">정보 수정</div>\n");
      out.write("\t\t\t\t<div id=\"memberLogoutBtn\" onclick=\"logout();\">로그 아웃</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t");
} 
      out.write("\n");
      out.write("\t</div>\n");
      out.write("\t<a id=\"kakao-login-btn\"></a>\n");
      out.write("<!-- \t<a href=\"http://developers.kakao.com/logout\">로그아웃</a> -->\n");
      out.write("\t<button onclick=\"kakao_logout();\">카카오 로그아웃</button>\n");
      out.write("\t<br>\n");
      out.write("\t<div id=\"naverIdLogin\"></div>\n");
      out.write("\t<button onclick=\"confirmEmail();\">이메일 확인</button>\n");
      out.write("\t<button onclick=\"naverLogout();\">네이버 로그아웃</button>\n");
      out.write("\t<br>\n");
      out.write("\t<br>\n");
      out.write("\t<br>\n");
      out.write("\t<br>\n");
      out.write("\t<div class=\"wrap\">\n");
      out.write("\t\t<div class=\"nav\">\n");
      out.write("\t\t\t<div class=\"menu\" onclick=\"mainPage();\">HOME</div>\n");
      out.write("\t\t\t<div class=\"menu\" onclick=\"noticePage();\">공지사항</div>\n");
      out.write("\t\t\t<div class=\"menu\" onclick=\"boardPage();\">게시판</div>\n");
      out.write("\t\t\t<div class=\"menu\" onclick=\"galleryPage();\">사진 게시판</div>\n");
      out.write("\t\t\t<div class=\"menu\" onclick=\"ajaxPage();\">Ajax</div>\n");
      out.write("\t\t\t<div class=\"menu\" onclick=\"storagePage();\">웹 스토리지</div>\n");
      out.write("\t\t\t<div class=\"menu\" onclick=\"mapPage();\">Map</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<div class=\"outer\">\n");
      out.write("\t<h1 align=\"center\">공지사항</h1>\n");
      out.write("\t<div class=\"tableArea\">\n");
      out.write("\t\t<table align=\"center\">\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<th>글번호</th>\n");
      out.write("\t\t\t\t<th width=\"200\">글제목</th>\n");
      out.write("\t\t\t\t<th width=\"100\">작성자</th>\n");
      out.write("\t\t\t\t<th>조회수</th>\n");
      out.write("\t\t\t\t<th width=\"100\">작성일</th>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t");
if(list.size() == 0){ 
      out.write("\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<td colspan=\"5\">조회 된 공지사항이 없습니다.</td>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t\t");
}else{ 
      out.write("\n");
      out.write("\t\t\t\t");
for(NoticeVo n : list){ 
      out.write("\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<td>");
      out.print(n.getNo() );
      out.write("</td>\t\t\t\n");
      out.write("\t\t\t\t\t<td>\n");
      out.write("\t<a href=\"/mwp/noticeDetail.do?noticeNo=");
      out.print(n.getNo() );
      out.write('"');
      out.write('>');
      out.print(n.getTitle() );
      out.write("</a>\n");
      out.write("\t\t\t\t\t</td>\t\t\t\n");
      out.write("\t\t\t\t\t<td>");
      out.print(n.getName() );
      out.write("</td>\t\t\t\n");
      out.write("\t\t\t\t\t<td>");
      out.print(n.getCount() );
      out.write("</td>\t\t\t\n");
      out.write("\t\t\t\t\t<td>");
      out.print(n.getWriteDate() );
      out.write("</td>\t\t\t\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t\t\t");
} 
      out.write("\n");
      out.write("\t\t\t");
} 
      out.write("\n");
      out.write("\t\t</table>\n");
      out.write("\t</div>\n");
      out.write("\t<div class=\"searchArea\" align=\"center\">\n");
      out.write("\t\t<select id=\"searchCondition\">\n");
      out.write("\t\t\t<option value=\"0\">전체</option>\n");
      out.write("\t\t\t<option value=\"1\">제목</option>\n");
      out.write("\t\t\t<option value=\"2\">내용</option>\n");
      out.write("\t\t\t<option value=\"3\">작성자</option>\n");
      out.write("\t\t</select>\t\t\n");
      out.write("\t\t<input type=\"text\" id=\"searchText\" placeholder=\"검색어 입력\"/>\n");
      out.write("\t\t<input type=\"button\" value=\"검색하기\" onclick=\"searchNotice();\"/>\n");
      out.write("\t\t");
if(null != member && "admin".equals(member.getUserId())){ 
      out.write("\n");
      out.write("\t\t\t<input type=\"button\" value=\"작성하기\" onclick=\"writeNotice();\"/>\n");
      out.write("\t\t");
} 
      out.write("\n");
      out.write("\t</div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<br> <br> <br> <br> <br> <br> <br>\n");
      out.write("\n");
      out.write("\t<div class = \"footer\">\n");
      out.write("\t\t<p>@copyright 2018</p>\n");
      out.write("\t\n");
      out.write("\t</div>\n");
      out.write("</body>\n");
      out.write("</html>");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
